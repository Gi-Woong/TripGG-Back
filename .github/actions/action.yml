name: Java CI Docker Blue-Green Deploy
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Make application.yml
        run: |
          mkdir -p ./src/main/resources
          echo "${{ secrets.APPLICATION_YML }}" > ./src/main/resources/application.yml

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v3
        with:
          arguments: clean bootJar

      - name: Docker image build
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/tripgg:latest .

      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/tripgg:latest

  blue-green-deploy:
    needs: build-docker-image
    runs-on: self-hosted
    steps:
      - name: Pull new image
        run: sudo docker pull ${{ secrets.DOCKER_USERNAME }}/tripgg:latest

      - name: Determine active container
        id: get_active
        run: |
          if sudo docker ps --format '{{.Names}}' | grep -q 'tripgg-blue'; then
            echo "active=blue" >> $GITHUB_ENV
          else
            echo "active=green" >> $GITHUB_ENV
          fi

      - name: Run new container
        run: |
          if [ "$active" = "blue" ]; then
            sudo docker run --name tripgg-green --rm -d -p 8081:8080 ${{ secrets.DOCKER_USERNAME }}/tripgg:latest
          else
            sudo docker run --name tripgg-blue --rm -d -p 8081:8080 ${{ secrets.DOCKER_USERNAME }}/tripgg:latest
          fi

      - name: Health check
        run: |
          for i in {1..10}; do
            if curl -s http://localhost:8081/actuator/health | grep '"status":"UP"'; then
              echo "Health check passed!"
              exit 0
            fi
            echo "Waiting for app..."
            sleep 5
          done
          echo "Health check failed"
          exit 1

      - name: Switch traffic
        run: |
          sudo iptables -t nat -R PREROUTING 1 -p tcp --dport 8080 -j REDIRECT --to-port 8081

      - name: Stop old container
        run: |
          if [ "$active" = "blue" ]; then
            sudo docker stop tripgg-blue || true
          else
            sudo docker stop tripgg-green || true
          fi

      - name: Clean up old images
        run: sudo docker system prune -f